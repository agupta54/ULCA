openapi: 3.0.1
info:
  title: Unified Language Contribution API (ULCA) documentation
  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.7.0

servers:
- url: https://stage-auth.ulcacontrib.org
  description: Production server (uses live data)
paths:
  /ulca/apis/v0/model/upload:
    post:
      tags:
      - model-controller
      operationId: uploadModel
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadModelResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'

  /ulca/apis/v0/model/submit:
    post:
      tags:
      - model-controller
      operationId: submitModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelExtended'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelExtended'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
  /ulca/apis/v0/model/search:
    post:
      tags:
      - model-controller
      operationId: searchModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelSearchResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
  /ulca/apis/v0/model/compute:
    post:
      tags:
      - model-controller
      operationId: computeModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelComputeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelComputeResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'

  /ulca/apis/v0/model:
    get:
      tags:
      - model-controller
      operationId: getModel
      parameters:
      - name: modelId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelExtended'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
  /ulca/apis/v0/model/listByUserId:
    get:
      tags:
      - model-controller
      operationId: listByUserId
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: startPage
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: endPage
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelListByUserIdResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpErrorResponse'
components:
  schemas:
    ASRConfig:
      required:
      - language
      type: object
      properties:
        modelId:
          type: string
          description: Unique identifier of model
          example: "103"
        language:
          $ref: '#/components/schemas/LanguagePair'
        audioFormat:
          type: string
          enum:
          - wav
          - pcm
          - mp3
          - flac
        channel:
          type: string
          enum:
          - mono
          - stereo
        samplingRate:
          type: number
        bitsPerSample:
          type: string
          enum:
          - sixteen
          - eight
        transcriptionFormat:
          $ref: '#/components/schemas/TranscriptionFormat'
        profanityFilter:
          type: boolean
          example: true
        domain:
          type: array
          properties:
            empty:
              type: boolean
          description: This attribute defines that `relevant business area`
          items:
            type: string
            description: This attribute defines that `relevant business area`
        detailed:
          type: boolean
          description: "to specify whether details are required in output like SNR,\
            \ sampling rate"
        punctuation:
          type: boolean
          example: true
        model:
          type: string
          enum:
          - command_and_search
          - phone_call
          - video
          - default
    ASRFile:
      type: object
      properties:
        audioContent:
          type: array
          description: audio content with audio duration <= 1min
          items:
            type: string
            description: audio content with audio duration <= 1min
            format: byte
        audioUri:
          type: string
          description: path on gcp/s3 bucket or https url
          example: gs://bucket/audio.wav
    ASRInference:
      required:
      - request
      - taskType
      type: object
      allOf:
      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'
      - type: object
        properties:
          taskType:
            type: string
          request:
            $ref: '#/components/schemas/ASRRequest'
          response:
            $ref: '#/components/schemas/ASRResponse'
    ASRRequest:
      required:
      - audio
      - config
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/ASRFile'
        config:
          $ref: '#/components/schemas/ASRConfig'
    ASRResponse:
      required:
      - output
      type: object
      properties:
        output:
          type: array
          properties:
            empty:
              type: boolean
          description: list of
          items:
            $ref: '#/components/schemas/Sentence'
        config:
          $ref: '#/components/schemas/TranslationConfig'
      description: the response for translation.  Standard http status codes to be
        used.
    Contributor:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: human name of the contributor
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: describing the contributor
    InferenceAPIEndPoint:
      required:
      - callbackUrl
      - schema
      type: object
      properties:
        callbackUrl:
          type: string
        schema:
          oneOf:
          - $ref: '#/components/schemas/ASRInference'
          - $ref: '#/components/schemas/OCRInference'
          - $ref: '#/components/schemas/TTSInference'
          - $ref: '#/components/schemas/TranslationInference'
      description: hosted location defines the end point of the model inference. specify
        a taskType along with Inference type
    LanguagePair:
      required:
      - sourceLanguage
      type: object
      properties:
        sourceLanguageName:
          type: string
          description: human name associated with the language code
        sourceLanguage:
          type: string
          description: "Indic language code, iso-639-1, iso 639-2"
          enum:
          - en
          - hi
          - mr
          - ta
          - te
          - kn
          - gu
          - pa
          - bn
          - ml
          - as
          - brx
          - doi
          - ks
          - kok
          - mai
          - mni
          - ne
          - or
          - sd
          - si
          - ur
          - sat
          - lus
          - njz
          - pnr
          - kha
          - grt
          - sa
        targetLanguageName:
          type: string
          description: human name associated with the language code
        targetLanguage:
          type: string
          description: "Indic language code, iso-639-1, iso 639-2"
          enum:
          - en
          - hi
          - mr
          - ta
          - te
          - kn
          - gu
          - pa
          - bn
          - ml
          - as
          - brx
          - doi
          - ks
          - kok
          - mai
          - mni
          - ne
          - or
          - sd
          - si
          - ur
          - sat
          - lus
          - njz
          - pnr
          - kha
          - grt
          - sa
      description: "language pair, make targetLanguage null to reuse the object to\
        \ indicate single language"
    ModelExtended:
      required:
      - description
      - domain
      - inferenceEndPoint
      - languages
      - license
      - name
      - submitter
      - task
      - trainingDataset
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 5
          type: string
          description: model name that you want your users to see
          example: vakyansh asr model
        description:
          maxLength: 1000
          minLength: 25
          type: string
          description: "brief description about model, its goal, basically something\
            \ sweet about it"
          example: Speech recognition model for classroom lecture
        refUrl:
          maxLength: 200
          minLength: 5
          type: string
          description: github link or url giving further info about the model
          example: https://github.com/Open-Speech-EkStep/vakyansh-models
        task:
          $ref: '#/components/schemas/ModelTask'
        languages:
          type: array
          properties:
            empty:
              type: boolean
          items:
            $ref: '#/components/schemas/LanguagePair'
        license:
          type: string
          enum:
          - cc-by-4.0
          - cc-by-sa-4.0
          - cc-by-nd-2.0
          - cc-by-nd-4.0
          - cc-by-nc-3.0
          - cc-by-nc-4.0
          - cc-by-nc-sa-4.0
          - mit
          - gpl-3.0
          - bsd-3-clause
          - private-commercial
          - unknown-license
        domain:
          type: array
          properties:
            empty:
              type: boolean
          description: This attribute defines that `relevant business area`
          items:
            type: string
            description: This attribute defines that `relevant business area`
        submitter:
          $ref: '#/components/schemas/Submitter'
        inferenceEndPoint:
          $ref: '#/components/schemas/InferenceAPIEndPoint'
        trainingDataset:
          $ref: '#/components/schemas/TrainingDataset'
        modelId:
          type: string
        userId:
          type: string
        submittedOn:
          type: string
        publishedOn:
          type: string
        status:
          type: string
    ModelTask:
      type: object
      properties:
        type:
          type: string
          enum:
          - translation
          - tts
          - asr
          - document-layout
          - ocr
      description: the category of model under which it has been released or trained
    OAuthIdentity:
      type: object
      properties:
        identifier:
          type: string
          description: system identification for the contributor
        oauthId:
          type: string
          description: "popular social network identifier, typically identifier returned\
            \ after auth"
        provider:
          type: string
          description: user authentication provider
          enum:
          - custom
          - github
          - facebook
          - instagram
          - google
          - yahoo
    OCRConfig:
      required:
      - language
      type: object
      properties:
        modelId:
          type: string
          description: Unique identifier of model
          example: "103"
        language:
          $ref: '#/components/schemas/LanguagePair'
    OCRInference:
      required:
      - request
      - taskType
      type: object
      allOf:
      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'
      - type: object
        properties:
          taskType:
            type: string
          request:
            $ref: '#/components/schemas/OCRRequest'
          response:
            $ref: '#/components/schemas/OCRResponse'
    OCRRequest:
      required:
      - config
      - imageUri
      type: object
      properties:
        imageUri:
          type: array
          description: list of paths on gcp/s3 bucket or https url
          example: gs://bucket/testimg.jpeg
          items:
            type: string
            description: list of paths on gcp/s3 bucket or https url
            example: gs://bucket/testimg.jpeg
        config:
          $ref: '#/components/schemas/OCRConfig'
    OCRResponse:
      required:
      - output
      type: object
      properties:
        output:
          type: array
          properties:
            empty:
              type: boolean
          description: list of
          items:
            $ref: '#/components/schemas/Sentence'
        config:
          $ref: '#/components/schemas/TranslationConfig'
      description: the response for translation.  Standard http status codes to be
        used.
    OneOfInferenceAPIEndPointSchema:
      required:
      - taskType
      type: object
      properties:
        taskType:
          type: string
      discriminator:
        propertyName: taskType
    Sentence:
      required:
      - source
      type: object
      properties:
        source:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: input sentence for the model
        target:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: "to be used along with translation model. expected translated\
            \ sentence, for reference"
      description: list of
    Submitter:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: Name of the Submitter
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: Describing the Submitter
        team:
          type: array
          properties:
            empty:
              type: boolean
          items:
            $ref: '#/components/schemas/Contributor'
      description: the schema of data file uploaded should adhere to this specified
        structure.
    TTSConfig:
      required:
      - language
      type: object
      properties:
        modelId:
          type: string
          description: Unique identifier of model
          example: "103"
        language:
          $ref: '#/components/schemas/LanguagePair'
    TTSInference:
      required:
      - request
      - taskType
      type: object
      allOf:
      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'
      - type: object
        properties:
          taskType:
            type: string
          request:
            $ref: '#/components/schemas/TTSRequest'
          response:
            $ref: '#/components/schemas/TTSResponse'
    TTSRequest:
      required:
      - config
      - input
      type: object
      properties:
        input:
          type: array
          properties:
            empty:
              type: boolean
          description: list of
          items:
            $ref: '#/components/schemas/Sentence'
        config:
          $ref: '#/components/schemas/TTSConfig'
    TTSResponse:
      required:
      - audioUri
      type: object
      properties:
        audioUri:
          type: string
          description: path on gcp/s3 bucket or https url
          example: gs://bucket/audio.wav
        config:
          $ref: '#/components/schemas/ASRConfig'
      description: the response for translation.  Standard http status codes to be
        used.
    TrainingDataset:
      required:
      - description
      type: object
      properties:
        datasetId:
          type: string
          description: "dataset identifier that has been exported from ULCA system,\
            \ passing this information makes your model enriched with further information\
            \ for the community"
        description:
          type: string
          description: explain your dataset that you have used for training your model
      description: training dataset metadata used to train the model
    TranscriptionFormat:
      type: object
      properties:
        value:
          type: string
          description: format of ASR output
          enum:
          - srt
          - transcript
          - alternatives
    TranslationConfig:
      required:
      - language
      type: object
      properties:
        modelId:
          type: integer
          description: Unique identifier of model
          format: int32
          example: 103
        language:
          $ref: '#/components/schemas/LanguagePair'
    TranslationInference:
      required:
      - request
      - taskType
      type: object
      allOf:
      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'
      - type: object
        properties:
          taskType:
            type: string
          request:
            $ref: '#/components/schemas/TranslationRequest'
          response:
            $ref: '#/components/schemas/TranslationResponse'
    TranslationRequest:
      required:
      - config
      - input
      type: object
      properties:
        input:
          type: array
          properties:
            empty:
              type: boolean
          description: list of
          items:
            $ref: '#/components/schemas/Sentence'
        config:
          $ref: '#/components/schemas/TranslationConfig'
    TranslationResponse:
      required:
      - output
      type: object
      properties:
        output:
          type: array
          properties:
            empty:
              type: boolean
          description: list of
          items:
            $ref: '#/components/schemas/Sentence'
        config:
          $ref: '#/components/schemas/TranslationConfig'
      description: the response for translation.  Standard http status codes to be
        used.
    UploadModelResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/ModelExtended'
    ModelSearchRequest:
      required:
      - sourceLanguage
      - task
      type: object
      properties:
        task:
          type: string
        sourceLanguage:
          type: string
        targetLanguage:
          type: string
    ModelSearchResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ModelExtended'
        count:
          type: integer
          format: int32
    Input:
      type: object
      properties:
        source:
          type: string
    ModelComputeRequest:
      required:
      - modelId
      type: object
      properties:
        modelId:
          type: string
        task:
          type: string
        input:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        audioUri:
          type: string
        audioContent:
          type: array
          items:
            type: string
            format: byte
    ModelComputeResponse:
      type: object
      properties:
        outputText:
          type: string
    ModelListByUserIdResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ModelExtended'
        count:
          type: integer
          format: int32
    HttpErrorResponse:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: status code as encountered in the processing life-cycle
          
        message:
          type: string
          description: human understandable format
        timestamp:
          type: string
          format: datetime

  securitySchemes:
      apiKey:
        type: apiKey
        in: header
        name: key
      apiSig:
        type: apiKey
        in: header
        name: sig
        description: signed request url or body   
